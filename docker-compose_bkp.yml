version: "3.2"

networks:
  frontend:
  backend:

services:

  webmvc:
    image: sample/mvc
    build: 
      context: .\WebRazor
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - RestaurantUrl=http://localhost:52794
      - ReviewUrl=http://localhost:53024
      - IdentityUrl=http://localhost:53054
      - CallBackUrl=http://localhost:58720


    container_name: webapp
    ports:
      - "5200:80"
    networks:
      - frontend 
    depends_on:
      - restaurant
      - tokenserver
      - review
      
  restaurant:
    image: sample/restaurant
    build: 
      context: .\RestaurantSearchApi
      dockerfile: Dockerfile

    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - IdentityUrl=http://tokenserver
      - SQLSERVER_HOST=mssqldata
      - SA_PASSWORD=sekar8
      - DATABASE=Restaurant
    container_name: restaurantapi
    ports:
      - "5100:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - mssqlserver
      - tokenserver
      
  review:
    image: sample/review
    build: 
      context: .\ReviewApi
      dockerfile: Dockerfile
    
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - IdentityUrl=http://tokenserver
      - SQLSERVER_HOST=mssqldata
      - SA_PASSWORD=sekar8
      - DATABASE=Restaurant
    container_name: reviewapi
    ports:
      - "5600:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - mssqlserver
      - tokenserver 

  tokenserver:
    image: sample/tokenservice
    build: 
      context: .\TokenApi
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - MvcClient=http://localhost:58720  
      - RestaurantApiClient=http://localhost:52794
      - ReviewApiClient=http://localhost:53024
    container_name: tokenserviceapi
    ports:
      - "5000:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - mssqlserver


  mssqlserver:
    image: "microsoft/mssql-server-linux:2017-latest"
    container_name: mssqldata
    ports:
      - "1402:1433" 
    networks:
      - backend
    environment:
      - SA_PASSWORD=sekar8
      - ACCEPT_EULA="Y"
  
      
